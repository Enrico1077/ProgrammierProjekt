# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python Tests

on:
  push:
    branches: [ "development" ]  #Bei Merge mit Main "development" -> "main"
  pull_request:
    branches: [ "development" ]  #Bei Merge mit Main "development" -> "main"

permissions:
  contents: read

jobs:
  test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest and generate Report
      run: |
        pytest --cov=app --cov-report=html:cov app/Tests/
    - name: Upload Coverage Report
      uses: actions/upload-artifact@v2
      with:
        name: coverage-report
        path: cov
    - name: Calculate Test Coverage
      id: coverage
      run: |
        total_coverage=$(grep -oP 'Total</td>\s+<td class="right" data-ratio="[\d ]+">(\d+)%' cov/index.html | sed -n 's/Total<\/td>\s+<td class="right" data-ratio="[\d ]\+">\(\d\+\)%/\1/p')
        echo "Total Coverage: $total_coverage%"
        echo "::set-output name=coverage::$total_coverage"
    - name: Check Test Coverage
      run: |
        coverage=${{ steps.coverage.outputs.coverage }}
        if [[ -n "$coverage" && $coverage -ge 70 ]]; then
          echo "Test coverage is greater than or equal to 70%"
        else
          echo "Test coverage is less than 70%. Aborting the workflow."
          exit 1
        fi


   




   
    

